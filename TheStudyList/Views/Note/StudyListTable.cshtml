@using Castle.Core.Internal
@using TheStudyList.Domain.Entities
@model IEnumerable<Note>

<table class="table table-bordered review">
    <thead>
    <tr>
        <th class="text-center" style="width: 30px">NB</th>
        <th style="width: 150px">Title</th>
        <th class="text-center" style="width: 42px">Time</th>
        <th class="text-center" style="width: 50px">Due</th>
        <th class="text-center" style="width: 35px">Ivl</th>
        <th style="width: 130px">Resources</th>
        <th class="text-center" style="width: 23px">R</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var note in Model)
        {
            <tr>
                <td class="text-center">
                    <span class="label label-primary" title="@note.Notebook">@note.NotebookInitials</span>
                </td>
                <td>@Html.ActionLink(note.Title, "Edit", new {id = note.Id, returnUrl = Request.Url.PathAndQuery})</td>
                <td class="text-center time-est-@((int) note.TimeEstimate)">@note.TimeEstimate</td>
                <td class="text-center @(note.IsOverdue() ? "overdue"
                                             : note.IsDue() ? "due-today"
                                                 : "")" title="UTC: @note.DueDate.ToString() &#13;Local: @note.DueDate.ToLocalTime(note.User).ToString()">
                    @note.DueDate.ToLocalTime(note.User).ToString("dd MMM")
                </td>
                <td class="text-center">@(note.IntervalInDays)d</td>
                <td>
                    <ul>
                        @foreach (var resource in note.Resources)
                        {
                            <li>
                                @if (String.IsNullOrWhiteSpace(resource.Url))
                                {
                                    @resource.Title
                                }
                                else
                                {
                                    <a href="@resource.Url" @(resource.IsEvernote() ? "class=evernote" : "target=_blank")>
                                        @(String.IsNullOrWhiteSpace(resource.Title) ? resource.Url : resource.Title)
                                    </a>
                                }
                            </li>
                        }
                    </ul>
                </td>
                <td class="text-center">
                    @Html.ActionLink("✔", "Study", "Note", new {id = note.Id, returnUrl = Request.Url.PathAndQuery},
                        new {@class = "btn btn-success", id = "btn-study"})
                </td>
            </tr>
        }
    </tbody>
</table>